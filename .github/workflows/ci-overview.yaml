# .github/workflows/ci-overview.yml
name: CI Overview

on:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch:

# One live run per PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
  cancel-in-progress: true

# Least privilege
permissions:
  contents: read
  checks: read
  actions: read
  pull-requests: write

jobs:
  overview:
    name: CI Overview        # <-- MUST match exactly
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # 1) Wait until PR checks settle; FAIL if anything is failing/pending
      - name: Wait for checks
        id: wait
        uses: wechuli/allcheckspassed@v1.2.0
        with:
          delay: '1'
          retries: '15'
          polling_interval: '1'
          fail_fast: false
          checks_exclude: 'skipped,CI Overview,Coverage with Codecov,codecov/patch'
          show_job_summary: 'true'   # table appears in this job's Summary

      # 2) Resolve THIS job’s numeric job_id by job NAME (not job id)
      - name: Get current job id
        if: always()
        id: jobid
        uses: Tiryoh/gha-jobid-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: CI Overview     # must equal jobs.<job>.name

      # 3) Fetch raw HTML for THIS job’s summary
      - name: Fetch summary_raw
        if: always()
        id: fetch
        uses: fjogeleit/http-request-action@v1.16.4
        with:
          method: GET
          # https://github.com/<owner>/<repo>/actions/runs/<run_id>/jobs/<job_id>/summary_raw
          url: ${{ format('{0}/{1}/actions/runs/{2}/jobs/{3}/summary_raw',
            github.server_url, github.repository, github.run_id, steps.jobid.outputs.job_id) }}
          timeout: '15000'
          customHeaders: '{"Accept":"text/html"}'   # must be valid JSON
          ignoreStatusCodes: '401,403,404'         # don’t hard fail if private/inaccessible

      # 4a) Post sticky PR comment with the raw HTML (code block) when we have content
      - name: Comment summary_raw (content)
        if: ${{ always() && steps.fetch.outputs.response != '' }}
        uses: mshick/add-pr-comment@v2
        with:
          message-id: ci-overview:summary-raw
          preformatted: true
          message: ${{ steps.fetch.outputs.response }}

      # 4b) Fallback sticky comment when content is missing
      - name: Comment summary_raw (fallback)
        if: ${{ always() && steps.fetch.outputs.response == '' }}
        uses: mshick/add-pr-comment@v2
        with:
          message-id: ci-overview:summary-raw
          preformatted: true
          message: |
            Bottom line: unavailable (meaning: cannot be shown). Could not fetch summary_raw.
            Tried URL:
            ${{ format('{0}/{1}/actions/runs/{2}/jobs/{3}/summary_raw',
                       github.server_url, github.repository, github.run_id, steps.jobid.outputs.job_id) }}
